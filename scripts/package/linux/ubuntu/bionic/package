#!/bin/bash

# This script will start a docker container that contains the requirements to
# build libbot2 (except LCM which is built as part of this process). It will
# then copy a script in the docker container that has been start, and run that
# script which builds and packages LCM, builds and packages libbot2, and copy
# the 2 deb archives in the current working directory before stopping and
# removing the docker container.

set -euxo pipefail

readonly timestamp=$(date -u +%Y%m%d)

export CPACK_LIBPNG_VERSION=16-16
export PACKAGE_OPENGL=TRUE

docker build -t libbot2-bionic-prereqs $(git rev-parse --show-toplevel)/scripts/setup/linux/ubuntu/bionic/
docker run -t -d --name libbot2-bionic -e CPACK_LIBPNG_VERSION=${CPACK_LIBPNG_VERSION} -e PACKAGE_OPENGL=${PACKAGE_OPENGL} libbot2-bionic-prereqs
docker cp $(git rev-parse --show-toplevel) libbot2-bionic:/tmp/libbot2
docker exec libbot2-bionic /tmp/libbot2/scripts/package/linux/ubuntu/common/build.sh ${timestamp}
docker cp libbot2-bionic:/tmp/lcm_1.3.95.${timestamp}-1_amd64.deb .
docker cp libbot2-bionic:/tmp/libbot2_0.0.1.${timestamp}-1_amd64.deb .
docker stop libbot2-bionic
docker rm libbot2-bionic

# Test package
docker run -t -d --name libbot2-bionic-test ubuntu:18.04
docker cp lcm_1.3.95.${timestamp}-1_amd64.deb libbot2-bionic-test:/tmp
docker cp libbot2_0.0.1.${timestamp}-1_amd64.deb libbot2-bionic-test:/tmp
docker cp $(git rev-parse --show-toplevel) libbot2-bionic-test:/tmp/libbot2
docker exec libbot2-bionic-test /tmp/libbot2/scripts/package/linux/ubuntu/common/test.sh ${timestamp}
docker stop libbot2-bionic-test
docker rm libbot2-bionic-test
